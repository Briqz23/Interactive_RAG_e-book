### Training a Neural Network (NN) to Predict Noise with DDPM method and UNet architecture

The objective is to train a neural network to predict noise by teaching it to differentiate between noise and non-noise.

#### Training Steps:
<img src="../imgs/training_flow.png" alt="Training flow on code" width="600">


1. **Combining Sprite and Noise:**
   - Add noise to an image (sprite), resulting in a new image that contains the original sprite with noise.
   
2. **Noise Prediction by the Neural Network:**
   - The neural network is tasked with predicting the noise present in the combined image.
   
3. **Comparison and Loss Calculation:**
   - Compare the noise predicted by the neural network with the actual noise added to the image.
   - Based on this comparison, calculate the loss.

4. **Backpropagation:**
   - Use the loss value to perform backpropagation in the neural network.
   - The neural network adjusts its weights and biases based on the calculated loss, gradually improving its ability to predict noise.

5. **Training with Multiple Sprites:**
   - Repeat the process for several images (sprites) with different noises.
   - Train the neural network with multiple losses from different sprites over several epochs.
   - This continuous training process allows the neural network to learn to predict noise more effectively over time.

#### Benefits of the Method:

- **Diversity of Data:**
  - By training with diverse sprites and noises, the neural network becomes more robust and better generalizes its predictions.
  
- **Efficiency in Learning:**
  - Using multiple losses over different epochs improves the neural network's learning efficiency, allowing for faster and more accurate convergence.


<img src="../imgs/epoches.png" alt="epoches" width="600">
### Conclusion

This training method enables the neural network to develop a refined ability to predict noise in images, making it an effective tool for applications that require noise reduction or identification.
